Q.remove all the vowels with special characters_
#include <iostream>
#include <string>
using namespace std;

int main() {
    char s[100], ch;
    
    cout << "Enter the String: "<<endl;
    cin.getline(s, 100);
    cout<<"enter special character"<<endl;
    
    cin >> ch;
    
    for (int i = 0; s[i] != '0'; i++) {
        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' ||
            s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {
            s[i] = ch;
        }
    }
    
    cout << s;

    return 0;
}













Q.check anagram_
#include <iostream>
using namespace std;
#include <string.h>
#include<algorithm>


bool A(string s1, string s2)
{
	
	int n1 = s1.length();
	int n2 = s2.length();

	
	if (n1 != n2)
		return false;


	sort(s1.begin(), s1.end());
	sort(s2.begin(), s2.end());

	
	for (int i = 0; i < n1; i++)
		if (s1[i] != s2[i])
			return false;

	return true;
}


int main()
{
	string s1 = "rohit";
	string s2 = "rohit";


	if (A(s1, s2))
		cout << "anagram";
	else
		cout << "not anagram ";
				

	return 0;
}
















Q.Segragation of 0 and 1_
#include <iostream> 
using namespace std; 



void s(int arr[], int size) 
{ 
	int t = 0; 
	int t1 = size - 1; 

	while (t < t1) { 
		if (arr[t] == 1) { 
			if (arr[t1] != 1) 
				swap(arr[t], arr[t1]); 
			t1--; 
		} 
		else
			t++; 
	} 
} 


int main() 
{ 
	int arr[] = { 0, 1, 0, 1, 1, 1 }; 
	int i, arr_size = sizeof(arr) / sizeof(arr[0]); 

	s(arr, arr_size); 

	cout << "segregation:  = "; 
	for (i = 0; i < arr_size; i++) 
		cout << arr[i] << " "; 

	return 0; 
}




Q.Sum of numbers till single digit
#include <iostream>
using namespace std;

int main()
{
    int num = 12345;
    int ans = 0;
    int rem = 0;
    
     while(num > 9){
        while(num > 0){
        rem = num % 10;
        ans = ans + rem;
        num = num / 10;
        }
        num = ans;
        ans = 0;
    }
    cout<<num ;}
Q.Given no. is automorphic or not
#include <iostream>

using namespace std;

int main()
{
   int a=25;
   int b=a*a;
   int x,y;
   int flag=0;
   while(a!=0 && b!=0)
   {
       x=a%10;
       y=b%10;
       
       
       if(x!=y)
       {
           flag=1;
           break;
           
       }
       a=a/10;
       b=b/10;
   }
   if(flag==0)
   {
       cout<<"number is   automorphic ";
   }
   else
   {
       cout<<"number is not   automorphic";
   }
    
}




Q.power of the diven no.
#include <iostream>
using namespace std;

int main()
{
    int b = 2 ;
    int p = 3;
    int ans = 1;
    for(int i = 1;i<=p;i++){
        ans = ans * b;
    }
    cout<< ans;
}






Q.print all the element of matrix
#include <iostream>
using namespace std;

int main()
{
    int row;
    cout<<"enter the no. of rows"<<endl;
    cin>>row;
    int column;
    cout<<"enter the no. of column"<<endl;
    cin>>column;
    
    int matrix[row][column];
    
    for(int i = 0;i < row;i++){
        for(int j = 0;j < column;j++){
            cout<<"enter the element"<<endl;
            cin>>matrix[i][j];
        }
    }
    
    for(int i = 0;i < row;i++){
        for(int j = 0;j < column;j++){
            
            cout<<matrix[i][j]<<" ";
        }
        cout<<endl;
    }
    

    return 0;
}







Q.Print diagonals of the matrix
#include <iostream>
using namespace std;

int main()
{
    int row;
    cout<<"enter the no. of rows"<<endl;
    cin>>row;
    int column;
    cout<<"enter the no. of column"<<endl;
    cin>>column;
    
    int matrix[row][column];
    
    for(int i = 0;i < row;i++){
        for(int j = 0;j < column;j++){
            cout<<"enter the element"<<endl;
            cin>>matrix[i][j];
        }
    }
    
    for(int i = 0;i < row;i++){
        for(int j = 0;j < column;j++){
            if(i == j){
            cout<<matrix[i][j]<<" ";
            }
            else{
                cout<<"0"<<" ";
            }
        }
        cout<<endl;
    }
    

    return 0;
}



Q.Maximum element in each row
#include <iostream>
using namespace std;

int main()
{
    int max = 0;
    int row;
    cout<<"enter the no. of rows"<<endl;
    cin>>row;
    int column;
    cout<<"enter the no. of column"<<endl;
    cin>>column;
    
    int matrix[row][column];
    
    for(int i = 0;i < row;i++){
        for(int j = 0;j < column;j++){
            cout<<"enter the element"<<endl;
            cin>>matrix[i][j];
        }
    }
    
    for(int i = 0;i < row;i++){
        for(int j = 0;j < column;j++){
            if(matrix[i][j] > max){
                max = matrix[i][j];
            }
        }
        cout<<max<<endl;
        max = 0;
    }
    
    return 0;
}





Q.Diagonal Sum and diagonal diff
#include <iostream>
using namespace std;

int main()
{
    int sum = 0;
    int diff = 0;
    int row;
    cout<<"enter the no. of rows"<<endl;
    cin>>row;
    int column;
    cout<<"enter the no. of column"<<endl;
    cin>>column;
    
    int matrix[row][column];
    
    for(int i = 0;i < row;i++){
        for(int j = 0;j < column;j++){
            cout<<"enter the element"<<endl;
            cin>>matrix[i][j];
        }
    }
    
    for(int i = 0;i < row;i++){
        for(int j = 0;j < column;j++){
            if(i == j){
            cout<<matrix[i][j]<<" ";
            sum = sum + matrix[i][j];
            diff = matrix[i][j] - diff;
            }
            else{
                cout<<"0"<<" ";
            }
        }
        cout<<endl;
    }
    cout<<sum<<endl;
    cout<<diff<<endl;
    

    return 0;
}


















Q.Star printing
#include <iostream>
using namespace std;

int main()
{
    int n = 5;
    for(int i = 0; i<5;i++){
        for(int j = 0; j<5;j++){
            if(i == j || i + j == n -1 ){
                cout<<"*";
            }
            else{
                cout<<" ";
            }
        }
        cout<<endl;
    }

    return 0;
}


















Q.Print first non repeating character_
#include <bits/stdc++.h>
using namespace std;

int main(){
    char arr[20];
    cin>>arr;
    
    int count = 0;
    for(int i = 0;i < strlen(arr);i++)
    {
        count = 0;
        for(int j = strlen(arr);j >= 0;j--){
            if(arr[i] == arr[j] && i != j){
                count++;
            }
        }
        if(count == 0){
            cout<<arr[i];
            break;
            }
    }
    return 0;
}

   Q.Max occurance of an element
#include <bits/stdc++.h>
using namespace std;

int main(){
    char arr[20];
    cin>>arr;
    int max = 0;
    char ans[1];
    int count = 0;
    for(int i = 0;i < strlen(arr);i++)
    {
        count = 0;
        for(int j = strlen(arr);j >= 0;j--){
            if(arr[i] == arr[j] && i != j){
                count++;
            }
        }
        if(count > max){
            max = count;
            ans[0] = arr[i];
            count = 0;
            }
    }
    cout<<ans[0];
    return 0;
}

   






Q.segragation of 0’s and 1’s
#include <iostream>
using namespace std;

int main()
{
    
   int ze = 0;
   int on = 0;
   int arr[5] = {1,1,0,1,0};
   int ans[5];
   
   for(int i = 0 ;i < 5;i++){
       if(arr[i] == 0){
           ze++;
       }
       else{
           on++;
       }
   }
   
   for(int i = 0; i < ze;i++){
       ans[i] = 0;
   }
   
   for(int i = ze;i<5;i++){
       ans[i] = 1;
   }
   
   for(int i = 0;i<5;i++){
       cout<<ans[i]<<" ";
   }
   
    
    return 0;
}




Q.Fabonacci series
#include <iostream>
using namespace std;

int main()
{
    int n;
    cin>>n;
    
    int n1 = 1;
    int n2 = 2;
    int n3;
    
    for(int i = 1;i <= n;i++){
        cout<<n1<<" ";
        n3 = n1 + n2;
        n1 = n2;
        n2 = n3;
    }
    return 0;}
Q.Harshad No.
#include <iostream>
using namespace std;

int main()
{
    int n;
    cin>>n;
    int n1 = 0;
    int sum = 0;
    
   while(n > 9){
       n1 = n%10;
       sum = sum + n1;
       n = n /10;
   }
   if(n % sum == 0){
       cout<<"Harshad No.";
   }
   else{
       cout<<"not Harshad No.";
   }
    return 0;
}

Q.Difference between max and min element in an array
#include <iostream>
using namespace std;

int findRange(int arr1[],int a){
    int max = arr1[0];
    int min = arr1[0];
    int result = 0;
    for(int i = 0;i < a;i++){
        if(arr1[i] > max){
            max = arr1[i];
        }
        else if(arr1[i] < min){
            min = arr1[i];
        }
    }
    result = max - min;
    return result;
}

int main()
{
    
    cout<<"enter the size";
    int n;
    cin>>n;
    int arr[n];
    for(int i = 0;i < n;i++){
        cin>>arr[i];
    }
    
    cout<<findRange(arr,n);
    
    

    return 0;
}


















Q.Wave Array
#include<bits/stdc++.h>
using namespace std;


int main()
{
int n = 6;

int arr[n];

for (int i = 0; i < n; i++){
    cin >> arr[i];
}

for (int i = 0; i < n; i+=2)
{
    if (i>0 && arr[i] < arr[i-1]){
        int temp = arr[i];
        arr[i] = arr[i-1];
        arr[i-1] = temp;
    }

    if (i<n-1 && arr[i] < arr[i+1]){
        int temp = arr[i];
        arr[i] = arr[i+1];
        arr[i+1] = temp;
    }
}

for (int i = 0; i < n; i++){
    cout << arr[i] << " ";
}
}






Q.Move all 0’s
#include<bits/stdc++.h>
using namespace std;


int main()
{
int arr[5] = {12,0,13,0,5};
int z = 0;
int nz = 0;
int ans[5];

for(int i = 0;i < 5;i++){
    if(arr[i] == 0 ){
        z++;
    }
    else{
        nz++;
    }
}

int j = 0;
for(int i = 0;i < 5;i++){
    if(arr[i] != 0){
      ans[j]  = arr[i] ;
      j++;
    }
}

for(int i = nz;i < 5;i++){
    ans[i] = 0;
}

for(int i = 0;i<5;i++){
    cout<<ans[i]<<" ";
}
}

Q.Missing Number
#include<bits/stdc++.h>
using namespace std;

int main()
{
   int arr[5] = {1,2,3,4,6};
   
   for(int i = 0;i <= 3;i++){
       if(arr[i + 1] != arr[i] + 1){
           cout<<arr[i] + 1;
       }
   }
}
